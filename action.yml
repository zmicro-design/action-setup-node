name: "Setup Node.js with Zmicro"
description: "github action for setuping docker (+buildx) with Zmicro"
author: "Zero <GitHub: whatwewant>"
branding:
  icon: "message-square"
  color: "green"
inputs:
  always-auth:
    description: "Set always-auth in npmrc."
    default: "false"
  node-version:
    required: false
    description: specify nodejs version
    default: "v16"
  registry-url:
    description: "Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN."
  token:
    description: Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    default: ${{ github.server_url == 'https://github.com' && github.token || '' }}

outputs:
  node-version:
    description: 'The installed node version.'
    value: ${{ steps.node.outputs.node-version }}
  npm-version:
    description: 'The installed npm version.'
    value: ${{ steps.npm.outputs.npm-version }}

runs:
  using: composite
  steps:
    - name: Setup Zmicro
      uses: zmicro-design/action-setup-zmicro@v1

    - name: Setup NVM
      shell: bash
      run: zmicro plugin install nvm

    - name: Setup Node.js
      shell: bash
      run: |
        NODE_VERSION=${{ inputs.node-version }}
        ALWAYS_WAYS_AUTH=${{ inputs.always-auth }}

        zmicro nvm install $NODE_VERSION
        zmicro nvm use $NODE_VERSION

    - name: Show Node.js Version
      shell: bash
      id: node
      run: |
        node --version
        echo "node-version=$(node --version)" >> $GITHUB_OUTPUT

    - name: Show NPM Version
      shell: bash
      id: npm
      run: |
        npm --version

        # @TODO
        NODE_VERSION=$(zmicro nvm current)
        sudo ln -sf /data/plugins/nvm/versions/${NODE_VERSION}/bin/npm /usr/local/bin/npm
        #
        npm --version

        echo "npm-version=$(npm --version)" >> $GITHUB_OUTPUT

    - name: Config NPM Config
      shell: zmicro {0}
      run: |
        REGISTRY=${{ inputs.registry-url }}
        ALWAYS_WAYS_AUTH=${{ inputs.always-auth }}
        NPM_TOKEN=${{ inputs.token }}

        # PREFIX
        PREFIX="$REGISTRY"

        if [ -n "$REGISTRY" ]; then
          # remove http: | https:
          PREFIX=${PREFIX#http:}
          PREFIX=${PREFIX#https:}
          # add end slash
          if [ "$(string::ends_with $PREFIX /)" != "true" ]; then
            PREFIX="${PREFIX}/"
          fi

          log::info "[$(timestamp)] set registry: $REGISTRY ..."
          npm set registry $REGISTRY

          if [ -n "$ALWAYS_WAYS_AUTH" ]; then
            log::info "[$(timestamp)] set always auth: $PREFIX:always-auth ..."
            npm config set $PREFIX:always-auth true
          fi

          if [ -n "$NPM_TOKEN" ]; then
            log::info "[$(timestamp)] set always auth: $PREFIX:_authToken ..."
            npm config set $PREFIX:_authToken "$NPM_TOKEN"
          fi
        else
          log::info "[$(timestamp)] no npm config to set, ignore"
        fi
